"use strict";

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Modal = require("../Modal/Modal");

var _Modal2 = _interopRequireDefault(_Modal);

var _Util = require("../Util/Util");

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Confirm = function (_React$Component) {
  (0, _inherits3.default)(Confirm, _React$Component);

  function Confirm() {
    (0, _classCallCheck3.default)(this, Confirm);
    return (0, _possibleConstructorReturn3.default)(this, (Confirm.__proto__ || (0, _getPrototypeOf2.default)(Confirm)).apply(this, arguments));
  }

  (0, _createClass3.default)(Confirm, [{
    key: "getButtons",
    value: function getButtons() {
      var disabledConfig = { disabled: this.props.disabled };

      var leftButtonClassName = (0, _classnames2.default)(this.props.leftButtonClassName);
      var rightButtonClassName = (0, _classnames2.default)(this.props.rightButtonClassName, disabledConfig);

      var extraAttributes = {};
      if (this.props.disabled) {
        extraAttributes = disabledConfig;
      }

      return _react2.default.createElement(
        "div",
        { className: "flush-bottom flex flex-direction-top-to-bottom flex-align-items-stretch-screen-small flex-direction-left-to-right-screen-small flex-justify-items-space-between-screen-small" },
        _react2.default.createElement(
          "button",
          {
            className: leftButtonClassName,
            onClick: this.props.leftButtonCallback
          },
          this.props.leftButtonText
        ),
        _react2.default.createElement(
          "button",
          (0, _extends3.default)({
            className: rightButtonClassName,
            onClick: this.props.rightButtonCallback
          }, extraAttributes),
          this.props.rightButtonText
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      var props = _Util2.default.exclude(this.props, "children", "disabled", "leftButtonText", "leftButtonClassName", "leftButtonCallback", "rightButtonText", "rightButtonClassName", "rightButtonCallback");

      return _react2.default.createElement(
        _Modal2.default,
        (0, _extends3.default)({
          closeByBackdropClick: !this.props.disabled,
          modalClass: "modal modal-small",
          showCloseButton: false,
          showFooter: true,
          footer: this.getButtons()
        }, props),
        this.props.children
      );
    }
  }]);
  return Confirm;
}(_react2.default.Component);

Confirm.defaultProps = {
  open: true,
  disabled: false,
  onClose: function onClose() {},


  // Left button properties
  leftButtonText: "Cancel",
  leftButtonClassName: "button button-primary-link flush-left",
  leftButtonCallback: function leftButtonCallback() {},

  // Right button properties
  rightButtonText: "Confirm",
  rightButtonClassName: "button button-primary",
  rightButtonCallback: function rightButtonCallback() {}
};

Confirm.propTypes = {
  children: _propTypes2.default.node.isRequired,

  open: _propTypes2.default.bool.isRequired,
  disabled: _propTypes2.default.bool,
  // This will be triggered by backdrop click
  onClose: _propTypes2.default.func,

  // Left button properties
  leftButtonText: _propTypes2.default.string.isRequired,
  leftButtonClassName: _propTypes2.default.string,
  leftButtonCallback: _propTypes2.default.func.isRequired,
  // Right button properties
  rightButtonText: _propTypes2.default.string.isRequired,
  rightButtonClassName: _propTypes2.default.string,
  rightButtonCallback: _propTypes2.default.func.isRequired
};

module.exports = Confirm;