"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getOwnPropertyDescriptor = require("babel-runtime/core-js/object/get-own-property-descriptor");

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Dropdown = require("../Dropdown/Dropdown");

var _Dropdown2 = _interopRequireDefault(_Dropdown);

var _DropdownListTrigger = require("../Dropdown/DropdownListTrigger");

var _DropdownListTrigger2 = _interopRequireDefault(_DropdownListTrigger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Select = function (_React$Component) {
  (0, _inherits3.default)(Select, _React$Component);

  function Select() {
    (0, _classCallCheck3.default)(this, Select);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Select.__proto__ || (0, _getPrototypeOf2.default)(Select)).call(this));

    _this.input = _react2.default.createRef();
    return _this;
  }

  (0, _createClass3.default)(Select, [{
    key: "buildItemsArray",
    value: function buildItemsArray() {
      return _react2.default.Children.map(this.props.children, function (child) {
        return {
          html: child,
          id: child.props.value,
          selectedHtml: child.props.label || child.props.value,
          selectable: !child.props.disabled
        };
      });
    }
  }, {
    key: "handleInputChange",
    value: function handleInputChange(event) {
      this.props.onChange(event);
    }
  }, {
    key: "handleDropdownChange",
    value: function handleDropdownChange(selectedOption) {
      var nativeInputValueSetter = (0, _getOwnPropertyDescriptor2.default)(window.HTMLInputElement.prototype, "value").set;

      if (this.input && this.input.current) {
        nativeInputValueSetter.call(this.input.current, selectedOption.id);
        this.input.current.dispatchEvent(new Event("input", { bubbles: true }));
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        { className: this.props.className },
        _react2.default.createElement("input", {
          className: "dropdown-select-input-value",
          name: this.props.name,
          ref: this.input,
          style: {
            display: "none"
          },
          value: this.props.value,
          onChange: this.handleInputChange.bind(this)
        }),
        _react2.default.createElement(_Dropdown2.default, {
          items: this.buildItemsArray(),
          persistentID: this.props.value === "" && this.props.placeholder ? null : this.props.value,
          onItemSelection: this.handleDropdownChange.bind(this),
          buttonClassName: "button dropdown-toggle",
          dropdownMenuClassName: this.props.className + " dropdown-menu",
          dropdownMenuListClassName: "dropdown-menu-list",
          dropdownMenuListItemClassName: "dropdown-menu-list-item",
          wrapperClassName: "dropdown",
          trigger: _react2.default.createElement(_DropdownListTrigger2.default, { placeholder: this.props.placeholder })
        })
      );
    }
  }]);
  return Select;
}(_react2.default.Component);

exports.default = Select;


Select.defaultProps = {
  className: "dropdown-select",
  onChange: function onChange() {},

  name: null,
  placeholder: "",
  value: ""
};

Select.propTypes = {
  className: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  name: _propTypes2.default.string,
  placeholder: _propTypes2.default.string,
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
};